name: Release

on:
  workflow_dispatch:
  schedule:
    - cron: '42 7 * * 2'
  #push:
  #  branches:
  #    - 'main'

jobs:
  release:
    #if: ${{ false }} # disable for now
    name: Release
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version: [16.x]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Cache node_modules
        uses: actions/cache@v1
        id: cache-node-modules
        with:
          path: node_modules
          key: install-${{ runner.OS }}-v${{ matrix.node-version }}-${{ hashFiles('**/package.json', '**/package-lock.json') }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm install

      - name: Run carna
        run: npx carna ci --build

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.CI_NPM_TOKEN }}
        run: |
          echo "-> ${GITHUB_TOKEN:1:5}"
          echo "-> ${NPM_TOKEN:1:5}"
          npx multi-semantic-release --sequential-init

      - name: Release (clean up)
        # env:
        #   USER_EMAIL: ${{ secrets.CI_USER_EMAIL }}
        #   USER_NAME: ${{ secrets.CI_USER_NAME }}
        run: |
          npm install --ignore-scripts --audit false
          git add --force --ignore-errors package-lock.json

          if [ "$(git diff --cached --numstat | wc -l )" -gt "0" ]; then
            git config --global user.email "${{ secrets.CI_USER_EMAIL }}"
            git config --global user.name "${{ secrets.CI_USER_NAME }}"
            git commit -m "chore(release): update package-lock.json [skip ci]"
            git push
          else
            echo "There was no release"
          fi
